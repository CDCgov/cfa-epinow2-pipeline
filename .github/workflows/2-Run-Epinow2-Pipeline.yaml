name: Run Epinow2 Pipeline
run-name: (2) Epinow2 Pipeline - ${{ github.event.head_commit.message }} - ${{ github.ref_name }}

# This GitHub Actions workflow builds a Docker image for the
# cfa-epinow2-pipeline-docker project. It consists of two jobs:
# build_image_dependencies and build_image.
#
# - The `build_image_dependencies` job carries out the first part of a
#   multi-stage build. It downloads and install all the dependencies
#   listed in the `DESCRIPTION` file. It uses the `Dockerfile-dependencies`
#   file to build the image.
#
#   The built image is then pushed to the corresponding registry.
#
#   The process is cached to avoid rebuilding the image if the dependencies
#   have not changed. This is by hashing the `DESCRIPTION` file and the
#   `Dockerfile-dependencies` file.
#
# - The build_image job builds the final image using the `Dockerfile` file.
#   It uses the image built in the previous job as a base image.
#
#   During the build process, the package is installed and built. Furthermore
#   the package is checked using `R CMD check` to ensure that it is working
#   correctly.
#
#   Once the image is built, it is pushed to the corresponding registry.


on:
  push:
    branches:
      - main
      - jk-azure-readiness # temporary
  workflow_dispatch:

env:
  # Together, these form: cfaprdbatchcr.azurecr.io/cfa-epinow2-pipeline
  REGISTRY: cfaprdbatchcr.azurecr.io
  IMAGE_NAME: cfa-epinow2-pipeline

jobs:

  # We now use a two-stage docker build (essentially), split across two dockerfiles.
  # TODO: Only run this if necessary, will need conditional job syntax
  # SEE also; ./.github/workflows/1-Build-Dependency-Image.yml

  Job01_build-image-dependencies:
    runs-on: cfa-cdcgov
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: "cfaprdbatchcr.azurecr.io"
          username: "cfaprdbatchcr"
          password: ${{ secrets.CFAPRDBATCHCR_REGISTRY_PASSWORD }}

      - name: Build and push dependencies image # first stage
        id: build_and_push_dependencies_image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}-dependencies:latest
            ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}-dependencies:${{ github.sha }}
          file: ./Dockerfile-dependencies # first stage Dockerfile


  Job02_build-model-image:
    runs-on: cfa-cdcgov
    steps:

      - name: Login to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: "cfaprdbatchcr.azurecr.io"
          username: "cfaprdbatchcr"
          password: ${{ secrets.CFAPRDBATCHCR_REGISTRY_PASSWORD }}

      - name: Build and push model pipeline image for Azure batch # second stage, the actual payload
        id: build_and_push_model_image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          file: ./Dockerfile # second stage Dockerfile

  Job03_create-and-launch-batch-pools:
    runs-on: cfa-cdcgov
    needs:
      - Job02_build-model-image

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repo
        id: checkout_repo
        uses: actions/checkout@v4

      - name: Login to Azure with NNH Service Principal
        id: azure_login_2
        uses: azure/login@v2
        with:
        # managed by EDAV. Contact Amit Mantri or Jon Kislin if you have issues.
          creds: ${{ secrets.EDAV_CFA_PREDICT_NNHT_SP }}

      # - name: Delete Existing Batch Pool
      #   id: delete_existing_batch_pool
      #   run: |

      #     export pool_id="cfa-epinow2-pipeline-ci"

      #     # Check if the batch pool exists
      #     EPINOW2_POOL_EXISTS=$(az batch pool show \
      #       --account-name "cfaprdba" \
      #       --account-endpoint "https://cfaprdba.eastus.batch.azure.com" \
      #       --pool-id "$pool_id" \
      #       --query "id" --output tsv 2>/dev/null)

      #     if [ -z "$EPINOW2_POOL_EXISTS" ]; then
      #         echo -e "Batch pool $pool_id does not exist."
      #     else
      #         echo -e "Batch pool $pool_id exists. Deleting it now..."
      #         az batch pool delete \
      #           --account-name cfaprdba \
      #           --account-endpoint https://cfaprdba.eastus.batch.azure.com \
      #           --pool-id "$pool_id" \
      #           --yes
      #         echo "Batch pool $pool_id has been deleted."
      #     fi

      - name: Create cfa-epinow2-pipeline Pools
        id: create_nhsn_nssp_pools
        run:
          echo 'hello world'
