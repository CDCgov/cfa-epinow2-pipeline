# All available hooks: https://pre-commit.com/hooks.html
# R specific hooks: https://github.com/lorenzwalthert/precommit
repos:
# R
-   repo: https://github.com/lorenzwalthert/precommit
    rev: v0.4.3.9015
    hooks:
    -   id: use-tidy-description
    -   id: lintr
    -   id: readme-rmd-rendered
    -   id: parsable-R
    -   id: no-browser-statement
    -   id: no-print-statement
        exclude: '^tests/testthat/test-print\.R$'
    -   id: no-debug-statement
    -   id: deps-in-desc
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
    -   id: check-added-large-files
        args: ['--maxkb=200']
    -   id: file-contents-sorter
        files: '^\.Rbuildignore$'
    -   id: end-of-file-fixer
        exclude: '(\.Rd)|(tests/testthat/_snaps/)'
    -   id: check-yaml
    -   id: check-toml
    -   id: mixed-line-ending
        args: ['--fix=lf']
    -   id: trailing-whitespace
        exclude: '(tests/testthat/_snaps/)|(\.Rd)'
-   repo: https://github.com/pre-commit-ci/pre-commit-ci-config
    rev: v1.6.1
    hooks:
    # Only required when https://pre-commit.ci is used for config validation
    -   id: check-pre-commit-ci-config
-   repo: local
    hooks:
    -   id: forbid-to-commit
        name: Don't commit common R artifacts
        entry: Cannot commit .Rhistory, .RData, .Rds or .rds.
        language: fail
        files: '\.(Rhistory|RData|Rds|rds)$'
        exclude: '^tests/testthat/data/.*\.rds$'
    -   id: block-test-parquet
        name: Block specific test.parquet file
        entry: |
            bash -c '
                if git diff --cached --name-only | grep -q "tests/testthat/data/2025-04-02_test.parquet"; then
                    echo "ERROR: tests/testthat/data/2025-04-02_test.parquet is blocked from being committed"
                    echo "  Please remove this file from your commit with: "
                    echo "  git reset HEAD tests/testthat/data/2025-04-02_test.parquet"
                    exit 1
                fi'
        language: system
        pass_filenames: false
        always_run: true

# Secrets
-   repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
    -   id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json
ci:
    autofix_commit_msg: |
        [pre-commit.ci] auto fixes from pre-commit.com hooks

        for more information, see https://pre-commit.ci
    autofix_prs: true
    autoupdate_branch: ''
    autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
    autoupdate_schedule: weekly
    submodules: false
